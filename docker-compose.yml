services:
  dns-server:
    build: .
    env_file:
      - .env
    ports:
      - "${DNS_HOST_PORT:-53}:${DNS_PORT:-53}/udp"
    volumes:
      - ${LOGS_VOLUME_PATH:-./logs}:/logs
    environment:
      - DNS_LISTEN=${DNS_LISTEN_ADDRESS:-0.0.0.0}
      - DNS_PORT=${DNS_PORT:-53}
      - ELASTICSEARCH_HOST=elasticsearch
      - ELASTICSEARCH_PORT=9200
      - ELASTICSEARCH_INDEX=${ELASTICSEARCH_INDEX:-dns-logs}
    command: [
      "./dns-server",
      "-listen", "${DNS_LISTEN_ADDRESS:-0.0.0.0}",
      "-port", "${DNS_PORT:-53}",
      "-upstreams", "${DNS_UPSTREAMS:-8.8.8.8:53,1.1.1.1:53}",
      "-log", "${DNS_LOG_FILE:-/logs/dns-requests.log}",
      "-log-level", "${DNS_LOG_LEVEL:-info}",
      "-cache-size", "${DNS_CACHE_SIZE:-10000}",
      "-cache-ttl", "${DNS_CACHE_TTL:-5m}",
      "-max-concurrent", "${DNS_MAX_CONCURRENT:-100}",
      "-timeout", "${DNS_TIMEOUT:-5s}",
      "-retry-attempts", "${DNS_RETRY_ATTEMPTS:-3}"
    ]
    depends_on:
      elasticsearch:
        condition: service_healthy
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "./dns-server", "-help"]
      interval: 30s
      timeout: 5s
      retries: 3
      start_period: 10s

  api-server:
    build:
      context: .
      dockerfile: Dockerfile.api
      args:
        VERSION: ${VERSION:-dev}
        GIT_COMMIT: ${GIT_COMMIT:-unknown}
        BUILD_DATE: ${BUILD_DATE:-unknown}
    env_file:
      - .env
    ports:
      - "${API_SERVER_PORT:-8080}:8080"
    volumes:
      - ${LOGS_VOLUME_PATH:-./logs}:/logs
      - ./custom-dns.json:/app/custom-dns.json
    environment:
      - API_PORT=8080
      - DNS_LOG_FILE=${DNS_LOG_FILE:-/logs/dns-requests.log}
      - ELASTICSEARCH_HOST=elasticsearch
      - ELASTICSEARCH_PORT=9200
      - ELASTICSEARCH_INDEX=dns-logs
    command: [
      "./api-server",
      "-port", "8080",
      "-log-file", "${DNS_LOG_FILE:-/logs/dns-requests.log}"
    ]
    depends_on:
      dns-server:
        condition: service_started
      elasticsearch:
        condition: service_healthy
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "wget", "--quiet", "--tries=1", "--spider", "http://localhost:8080/api/health"]
      interval: 30s
      timeout: 5s
      retries: 3
      start_period: 15s

  frontend:
    build:
      context: .
      dockerfile: Dockerfile.frontend
    command: ["pnpm", "start", "--", "--host", "0.0.0.0"]
    env_file:
      - .env
    ports:
      - "${FRONTEND_HOST_PORT:-3000}:3000"
    environment:
      - CHOKIDAR_USEPOLLING=true
      - WATCHPACK_POLLING=true
      - WDS_SOCKET_HOST=0.0.0.0
      - WDS_SOCKET_PORT=0
      - FAST_REFRESH=false
      - REACT_APP_API_PORT=${API_SERVER_PORT:-8080}
      - REACT_APP_KIBANA_PORT=${KIBANA_PORT:-5601}
    volumes:
      - ./frontend:/app
    depends_on:
      - api-server
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "wget", "--quiet", "--tries=1", "--spider", "http://localhost:3000"]
      interval: 30s
      timeout: 5s
      retries: 3
      start_period: 15s

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.11.0
    env_file:
      - .env
    environment:
      - node.name=dns-elasticsearch
      - cluster.name=dns-cluster
      - discovery.type=single-node
      - bootstrap.memory_lock=true
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
      - xpack.security.enabled=false
      - xpack.security.enrollment.enabled=false
    ulimits:
      memlock:
        soft: -1
        hard: -1
    volumes:
      - elasticsearch-data:/usr/share/elasticsearch/data
    ports:
      - "${ELASTICSEARCH_PORT:-9092}:9200"
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:9200/_cluster/health || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s

  kibana:
    image: docker.elastic.co/kibana/kibana:8.11.0
    env_file:
      - .env
    environment:
      - SERVERNAME=kibana
      - ELASTICSEARCH_HOSTS=http://elasticsearch:9200
      - ELASTICSEARCH_USERNAME=
      - ELASTICSEARCH_PASSWORD=
      - xpack.security.enabled=false
      - xpack.encryptedSavedObjects.encryptionKey=${KIBANA_ENCRYPTION_KEY:-dns-go-kibana-encryption-key!!}
    ports:
      - "${KIBANA_PORT:-5601}:5601"
    depends_on:
      elasticsearch:
        condition: service_healthy
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:5601/api/status || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s

volumes:
  elasticsearch-data:
    driver: local
